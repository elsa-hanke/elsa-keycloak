variables:
  vmImageName: 'Ubuntu 16.04'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  tag: '10.0.2'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: elsa/keycloak
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(tag)
    - task: ECRPushImage@1
      condition: eq(variables.isMain, true)
      inputs:
        awsCredentials: 'elsa-ci'
        regionName: 'eu-west-1'
        imageSource: 'imagename'
        sourceImageTag: '$(tag)'
        sourceImageName: 'elsa/keycloak'
        repositoryName: 'elsa-keycloak'
        pushTag: '$(tag)'

  - stage: Deploy_keycloak_dev
    displayName: Deploy stage
    dependsOn: Build
    condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
      - deployment: Deploy
        displayName: Deploy keycloak dev
        environment: "development"
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AmazonWebServices.aws-vsts-tools.AWSCLI.AWSCLI@1
                  inputs:
                    awsCredentials: 'elsa-ci'
                    regionName: 'eu-west-1'
                    awsCommand: 'ecs'
                    awsSubcommand: 'update-service'
                    awsArguments: '--cluster elsa-dev-cluster --service ecs-dev-keycloak --force-new-deployment'
                  displayName: Force update ecs service